{"version":3,"sources":["Components/inc/AppBar.js","Pages/SymmetricEncryption.js","Pages/SymmetricDecryption.js","Pages/AsymmetricEncryption.js","Pages/AsymmetricDecryption.js","Pages/MessageSummary.js","Pages/DigitalSignature.js","images/symmetricEncryptionImage.jpg","images/symmetricDecryptionImage.png","images/asymmetricEncryptionImage.png","images/asymmetricDecryptionImage.jpg","images/messageSummaryImage.png","images/digitalSignatureImage.jpg","Components/CenteredGrid.js","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AppBar","Fragment","Navbar","bg","variant","Brand","React","Component","SymmetricEncryption","Container","Form","Group","controlId","Label","Control","as","rows","Text","className","Button","type","to","width","height","viewBox","class","fill","xmlns","fill-rule","d","SymmetricDecryption","File","id","Input","AsymmetricEncryption","AsymmetricDecryption","MessageSummary","DigitalSignature","CenteredGrid","CardDeck","Card","Img","style","src","symmetricEncryptionImage","Body","Title","symmetricDecryptionImage","asymmetricEncryptionImage","asymmetricDecryptionImage","messageSummaryImage","digitalSignatureImage","Home","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5a39a6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nclass AppBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Navbar.Brand>\r\n            <pre>PROJEKT</pre>\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppBar;","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SymmetricEncryption extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <h2>Simetrično kriptiranje</h2>\r\n          <br></br>\r\n          <Form>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Upiši željeni tekst za kriptiranje</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={3} />\r\n              <Form.Text className=\"text-muted\">\r\n                Upisani kriptirani tekst spremit će se u datoteku <b>\"text.txt\"</b>\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Kriptiraj\r\n            </Button>\r\n          </Form>\r\n\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <hr></hr>\r\n\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <h3>Tekst je uspješno kriptiran!</h3>\r\n          <br></br>\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Kriptirana datoteka <b>text.txt</b></Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} />\r\n            <Form.Text className=\"text-muted\">\r\n              Automatski se generirao simetrični tajni ključ u datoteci <b>\"tajni_ključ.txt\"</b>\r\n              </Form.Text>\r\n          </Form.Group>\r\n          <Link to=\"/symmetricDecryption\">\r\n            <Button variant=\"primary\" className=\"float-right\" type=\"button\">\r\n              Sljedeća stranica  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-right\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fill-rule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\r\n              </svg>\r\n            </Button>\r\n          </Link>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SymmetricEncryption;\r\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nclass SymmetricDecryption extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <h2>Simetrično dekriptiranje</h2>\r\n          <br></br>\r\n          <Form>\r\n            <Form.Group controlId=\"exampleForm.File1\">\r\n              <Form.File id=\"formcheck-api-regular\">\r\n                <Form.File.Label>Učitaj kriptirani tekst za dekriptiranje</Form.File.Label>\r\n                <Form.File.Input />\r\n              </Form.File>\r\n              <Form.Text className=\"text-muted\">\r\n                Automatski generirani <b>\"tajni_ključ.txt\"</b> će se koristiti radi dekriptiranje odabrane kriptirane datoteke\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Dekriptiraj\r\n            </Button>\r\n            </Form>\r\n            \r\n            <br></br>\r\n            <br></br>\r\n            <hr></hr>\r\n            <br></br>\r\n            <h3>Dekriptirani tekst</h3>\r\n            <br></br>\r\n            <p>Neki tekst koji se upravo dekriptirao bla bla bla</p>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SymmetricDecryption;\r\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AsymmetricEncryption extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <h2>Asimetrično kriptiranje</h2>\r\n                    <br></br>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Upiši željeni tekst za kriptiranje</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Upisani kriptirani tekst spremit će se u datoteku <b>\"text.txt\"</b>\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Kriptiraj\r\n                        </Button>\r\n                    </Form>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <hr></hr>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <h3>Tekst je uspješno kriptiran!</h3>\r\n                    <br></br>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Kriptirana datoteka <b>text.txt</b></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            Automatski su se generiralni javni i privatni ključevi unutar datoteka <b>\"javni_ključ.txt\"</b> i <b>\"prvatni_ključ.txt\"</b>\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Link to=\"/asymmetricDecryption\">\r\n                        <Button variant=\"primary\" className=\"float-right\" type=\"button\">\r\n                            Sljedeća stranica  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-right\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fill-rule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\r\n                            </svg>\r\n                        </Button>\r\n                    </Link>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AsymmetricEncryption;\r\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nclass AsymmetricDecryption extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <h2>Asimetrično dekriptiranje</h2>\r\n                    <br></br>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.File1\">\r\n                            <Form.File id=\"formcheck-api-regular\">\r\n                                <Form.File.Label>Učitaj kriptirani tekst za dekriptiranje</Form.File.Label>\r\n                                <Form.File.Input />\r\n                            </Form.File>\r\n                            <Form.Text className=\"text-muted\">\r\n                                Automatski generirani <b>\"javni_ključ.txt\"</b> i <b>\"prvatni_ključ.txt\"</b> će se koristiti radi dekriptiranje odabrane kriptirane datoteke\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Dekriptiraj\r\n                        </Button>\r\n                    </Form>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    <h3>Dekriptirani tekst</h3>\r\n                    <br></br>\r\n                    <p>Neki tekst koji se upravo dekriptirao bla bla bla</p>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AsymmetricDecryption;\r\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nclass MessageSummary extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <h2>Sažetak poruke</h2>\r\n                    <br></br>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.File1\">\r\n                            <Form.File id=\"formcheck-api-regular\">\r\n                                <Form.File.Label>Učitaj tekst</Form.File.Label>\r\n                                <Form.File.Input />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Odaberi kriptiranu tekstualnu datoteku\r\n                                </Form.Text>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"button\">\r\n                            Učitaj tekst\r\n                        </Button>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Učitana datoteka</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} />\r\n                        </Form.Group>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Button variant=\"primary\" className=\"col text-center\" type=\"button\">\r\n                            Izračunaj sažetak\r\n                        </Button>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <hr></hr>\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <h3>Sažetak poruke</h3>\r\n                        <br></br>\r\n                        <p>Neki tekst koji se upravo dekriptirao bla bla bla</p>\r\n                    </Form>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageSummary;\r\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nclass DigitalSignature extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <h2>Digitalni potpis</h2>\r\n                    <br></br>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.File1\">\r\n                            <Form.File id=\"formcheck-api-regular\">\r\n                                <Form.File.Label>Učitaj tekst</Form.File.Label>\r\n                                <Form.File.Input />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Odaberi kriptirani tekst za potpis\r\n                                </Form.Text>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"button\">\r\n                            Učitaj tekst\r\n                        </Button>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Učitana datoteka</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} />\r\n                        </Form.Group>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <hr></hr>\r\n                        <br></br>\r\n\r\n                        <Button variant=\"primary\" type=\"button\">\r\n                            Digitalni potpis\r\n                        </Button>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <h3>Digitalni potpis</h3>\r\n                        <br></br>\r\n                        <p>Neki tekst koji digitalnog potpisa bla bla bla</p>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <Button variant=\"primary\" className=\"col text-center\" type=\"button\">\r\n                            Provjeri digitalni potpis\r\n                        </Button>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <h3>Digitalni potpis je ispravan</h3>\r\n                        <h3>Digitalni potpis je neispravan</h3>\r\n                    </Form>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DigitalSignature;\r\n","export default __webpack_public_path__ + \"static/media/symmetricEncryptionImage.5d6ea852.jpg\";","export default __webpack_public_path__ + \"static/media/symmetricDecryptionImage.b7e77baa.png\";","export default __webpack_public_path__ + \"static/media/asymmetricEncryptionImage.f035c288.png\";","export default __webpack_public_path__ + \"static/media/asymmetricDecryptionImage.90286cf4.jpg\";","export default __webpack_public_path__ + \"static/media/messageSummaryImage.62818bce.png\";","export default __webpack_public_path__ + \"static/media/digitalSignatureImage.ff9623e1.jpg\";","import React from 'react';\r\nimport { Card, Button, CardDeck } from 'react-bootstrap';\r\n\r\nimport symmetricEncryptionImage from '../images/symmetricEncryptionImage.jpg';\r\nimport symmetricDecryptionImage from '../images/symmetricDecryptionImage.png';\r\nimport asymmetricEncryptionImage from '../images/asymmetricEncryptionImage.png';\r\nimport asymmetricDecryptionImage from '../images/asymmetricDecryptionImage.jpg';\r\nimport messageSummaryImage from '../images/messageSummaryImage.png';\r\nimport digitalSignatureImage from '../images/digitalSignatureImage.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function CenteredGrid() {\r\n  return (\r\n    <React.Fragment>\r\n    <CardDeck>\r\n      <Card>\r\n        <Card.Img variant=\"top\" style={{ height: '250px' }} src={symmetricEncryptionImage} />\r\n        <Card.Body>\r\n          <Card.Title>Simetrično kriptiranje</Card.Title>\r\n          <Link to={'/symmetricEncryption'}>\r\n            <Button variant=\"primary\">Otvori</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Img variant=\"top\" style={{ height: '250px' }} src={symmetricDecryptionImage} />\r\n        <Card.Body>\r\n          <Card.Title>Simetrično dekriptiranje</Card.Title>\r\n          <Link to={'/symmetricDecryption'}>\r\n            <Button variant=\"primary\">Otvori</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </CardDeck>\r\n\r\n    <br></br>\r\n    <br></br>\r\n\r\n    <CardDeck>\r\n      <Card>\r\n        <Card.Img variant=\"top\" style={{ height: '250px' }} src={asymmetricEncryptionImage} />\r\n        <Card.Body>\r\n          <Card.Title>Simetrično kriptiranje</Card.Title>\r\n          <Link to={'/asymmetricEncryption'}>\r\n            <Button variant=\"primary\">Otvori</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Img variant=\"top\" style={{ height: '250px' }} src={asymmetricDecryptionImage} />\r\n        <Card.Body>\r\n          <Card.Title>Simetrično dekriptiranje</Card.Title>\r\n          <Link to={'/asymmetricDecryption'}>\r\n            <Button variant=\"primary\">Otvori</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </CardDeck>\r\n\r\n    <br></br>\r\n    <br></br>\r\n\r\n    <CardDeck>\r\n      <Card>\r\n        <Card.Img variant=\"top\" style={{ height: '250px' }} src={messageSummaryImage} />\r\n        <Card.Body>\r\n          <Card.Title>Sažetak poruke</Card.Title>\r\n          <Link to={'/messageSummary'}>\r\n            <Button variant=\"primary\">Otvori</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Img variant=\"top\" style={{ height: '250px' }} src={digitalSignatureImage} />\r\n        <Card.Body>\r\n          <Card.Title>Digitalni potpis</Card.Title>\r\n          <Link to={'/digitalSignature'}>\r\n            <Button variant=\"primary\">Otvori</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </CardDeck>\r\n\r\n    <br></br>\r\n    <br></br>\r\n    <br></br>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport EncryptComponents from '../Components/CenteredGrid'\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <EncryptComponents />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport AppBar from './Components/inc/AppBar'\r\nimport SymmetricEncryption from './Pages/SymmetricEncryption'\r\nimport SymmetricDecryption from './Pages/SymmetricDecryption'\r\nimport AsymmetricEncryption from './Pages/AsymmetricEncryption'\r\nimport AsymmetricDecryption from './Pages/AsymmetricDecryption'\r\nimport MessageSummary from './Pages/MessageSummary'\r\nimport DigitalSignature from './Pages/DigitalSignature'\r\nimport Home from './Pages/Home'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <React.Fragment>\r\n          <AppBar />\r\n          <br></br>\r\n          <div>\r\n            <Route path=\"/symmetricEncryption\" component={SymmetricEncryption} />\r\n            <Route path=\"/symmetricDecryption\" component={SymmetricDecryption} />\r\n            <Route path=\"/asymmetricEncryption\" component={AsymmetricEncryption} />\r\n            <Route path=\"/asymmetricDecryption\" component={AsymmetricDecryption} />\r\n            <Route path=\"/messageSummary\" component={MessageSummary} />\r\n            <Route path=\"/digitalSignature\" component={DigitalSignature} />\r\n            <Route path=\"/home\" exact component={Home} />\r\n            <Route path=\"/\" exact component={Home} />\r\n          </div>\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}